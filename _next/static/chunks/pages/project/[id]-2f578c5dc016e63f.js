(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[142],{1244:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/project/[id]",function(){return s(1982)}])},8713:function(e,t,s){"use strict";s.d(t,{Z:function(){return h}});var n=s(5893),i=(s(7294),s(682)),a=s(1608),r=s(1555),o=s(842),c=s(1850),l=s(1664),p=s.n(l),d=s(5675),m=s.n(d);function h(){return(0,n.jsx)(i.Z,{fluid:!0,as:"header",children:(0,n.jsx)(a.Z,{className:"justify-content-center bg-dark shadow",children:(0,n.jsx)(r.Z,{xs:12,lg:8,children:(0,n.jsx)(o.Z,{collapseOnSelect:!0,expand:"lg",bg:"dark",variant:"dark",children:(0,n.jsxs)(i.Z,{children:[(0,n.jsx)(p(),{scroll:!1,href:"/",className:"navbar-brand",passHref:!0,children:(0,n.jsx)(o.Z.Brand,{className:"navbar-brand",children:"Kris"})}),(0,n.jsx)(o.Z.Toggle,{"aria-controls":"responsive-navbar-nav"}),(0,n.jsxs)(o.Z.Collapse,{id:"responsive-navbar-nav",children:[(0,n.jsxs)(c.Z,{className:"me-auto",children:[(0,n.jsx)(p(),{scroll:!1,"aria-current":"page",passHref:!0,href:"/projects",children:(0,n.jsx)("a",{className:"nav-link",children:"Projects"})}),(0,n.jsx)(p(),{scroll:!1,href:"/hardskills",passHref:!0,children:(0,n.jsx)("a",{className:"nav-link",children:"HardSkills"})}),(0,n.jsx)(p(),{scroll:!1,href:"/about",passHref:!0,children:(0,n.jsx)("a",{className:"nav-link",children:"About"})})]}),(0,n.jsx)(c.Z,{className:"py-1",children:(0,n.jsx)("a",{className:"nav-link text-decoration-none p-0 d-flex align-items-center",href:"https://github.com/kris1803",target:"_blank",rel:"noreferrer",children:(0,n.jsx)(m(),{src:"/img/github_logo.png",unoptimized:!0,className:"rounded-circle",alt:"Kris1803",width:"40",height:"40"})})})]})]})})})})})}},1489:function(e,t){"use strict";t.Z={hidden:{opacity:0,x:-200,y:0},enter:{opacity:1,x:0,y:0},exit:{opacity:0,x:0,y:-100}}},1982:function(e,t,s){"use strict";s.r(t);var n=s(5893),i=s(1163),a=s(1608),r=s(1555),o=s(5675),c=s.n(o),l=s(9008),p=s.n(l),d=s(858),m=s(1584),h=s(8713),u=s(1489);t.default=function(){var e,t=(0,i.useRouter)().query,s=parseInt(t.id),o={};return(e=!isNaN(s)&&s>0&&s<=m.length)&&(o=m[s-=1]),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(p(),{children:[(0,n.jsx)("title",{children:"Kristians portfolio - Project"}),(0,n.jsx)("meta",{name:"google-site-verification",content:"08SOpCyv4brbpxXNvAC69k8E-hA4H32L3y7KBaeDdpU"}),(0,n.jsx)("meta",{name:"theme-color",content:"#000000"}),(0,n.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1"}),(0,n.jsx)("link",{rel:"icon",href:"/favicon.ico"}),(0,n.jsx)("meta",{name:"title",content:"Kristians Portfolio - Projects"}),(0,n.jsx)("meta",{name:"description",content:"Fullstack JavaScript developper with a focus on React and React Native. Projects page."}),(0,n.jsx)("meta",{name:"og:title",content:"Kristians Portfolio - Projects"}),(0,n.jsx)("meta",{name:"og:description",content:"Fullstack JavaScript developper with a focus on React and React Native. Projects page."}),(0,n.jsx)("meta",{name:"og:image",content:"/img/assets/site_screenshot.png"}),(0,n.jsx)("meta",{name:"og:url",content:"https://kris1803.github.io/"}),(0,n.jsx)("meta",{name:"og:type",content:"website"}),(0,n.jsx)("meta",{property:"og:locale",content:"en_GB"})]}),(0,n.jsx)(h.Z,{}),(0,n.jsxs)(d.E.main,{initial:"hidden",animate:"enter",exit:"exit",variants:u.Z,transition:{type:"linear"},className:"mainBackground mainContainer d-flex flex-column align-items-center justify-content-center p-0 m-0",children:[!e&&(0,n.jsx)("h1",{className:"text-center",children:"Not valid project number."}),e&&(0,n.jsxs)(a.Z,{className:"mx-0 mb-3 p-0 w-100 bg-white",style:{maxWidth:1280,borderRadius:40},children:[(0,n.jsx)(r.Z,{xs:12,className:"d-flex justify-content-center align-items-center",style:{height:80,backgroundColor:"#eee",borderRadius:40},children:(0,n.jsx)("h3",{className:"m-0 p-0",children:o.name})}),(0,n.jsx)(r.Z,{xs:12,className:"mt-3 mb-3",children:(0,n.jsxs)(a.Z,{className:"m-0 p-0 flex-row-reverse",children:[(0,n.jsx)(r.Z,{xs:12,lg:6,children:(0,n.jsx)(c(),{unoptimized:!0,src:o.img,layout:"responsive",width:"1920",height:"980",className:"img-fluid rounded-3",alt:"Project screenshot"})}),(0,n.jsx)(r.Z,{xs:12,lg:6,className:"pt-3 pb-3 d-flex align-items-center",children:(0,n.jsx)("p",{style:{fontSize:14},children:"".concat(o.description)})}),(0,n.jsxs)(r.Z,{xs:12,className:"mt-3 mb-3",children:[(0,n.jsxs)("div",{className:"d-flex",children:[(0,n.jsx)(c(),{unoptimized:!0,src:"/img/assets/language.png",width:"28",height:"25",layout:"fixed",alt:""}),(0,n.jsxs)("p",{className:"my-0 ms-2 p-0",children:["Language : ",o.lang]})]}),(0,n.jsxs)("div",{className:"d-flex mt-3",children:[(0,n.jsx)(c(),{unoptimized:!0,src:"/img/assets/stack.png",layout:"fixed",width:"28",height:"25",alt:""}),(0,n.jsxs)("p",{className:"my-0 ms-2 p-0",children:["Technologies : ",o.stack.join(", ")]})]})]})]})})]})]})]})}},1163:function(e,t,s){e.exports=s(880)},1584:function(e){"use strict";e.exports=JSON.parse('[{"name":"Locapic","lang":"fr","img":"/img/projects/locapic.webp","description":"Locapic - Points d\'interet et chat avec les autres utilisateurs.\\n Application en React Native de localisation en temps r\xe9el, avec possibilit\xe9 de sauvegarder des points d\'inter\xeat sur la carte (sauvegard\xe9s dans le t\xe9l\xe9phone dans le local storage). Chat en temps r\xe9el avec les autres utilisateurs connect\xe9s.\\n Backend: express, socket.io. Frontend: Redux, React native, Async Storage, react-native-elements, socket.io client.\\n Pour d\xe9marrer: - Changer l\'adresse ip de \'localhost\' \xe0 l\'adresse ip interne du backend dans le fichier ChatScreen.js du frontend/screens. - Faire npm install et npm start dans les dossiers frontend et backend. - Pour tester l\'app depuis un t\xe9l\xe9phone, scanner le qr code du terminal avec l\'application Expo.\\n Socket.io is very unstable, so maybe using ws module will fix this.","stack":["React Native (Expo)","Socket.io","REST Api express"],"codeLink":"https://github.com/kris1803/locapic"},{"name":"Bikeshop","lang":"en","img":"https://raw.githubusercontent.com/kris1803/BikeShopKris/main/public/images/site_screenshot.png","description":"Bike shop with cart and checkout project for testing purposes\\n Using payment system api: Stripe.\\n To start project: - put your stripe api key in routes/index.js file - do npm install - do npm start\\n Shopping cart editing Mostly back-end project on NodeJS with express-generator with EJS","stack":["Express EJS","Dynamic Views","Webservice API (Stripe)","Bootstrap"],"codeLink":"https://github.com/kris1803/BikeShopKris"},{"name":"myMoviz","lang":"fr","img":"/img/projects/mymoviz.webp","description":"Application en MERN stack, pour voir les films actuels au cin\xe9ma et pourvoir les ajouter \xe0 la wishlist de son compte personnel. Frontend situ\xe9 dans le r\xe9pertoire reactapp.\\n Affichage des derniers films sortis en cin\xe9ma.\\n Possibilit\xe9 d\'ajout de films en wishlist, et possibilit\xe9 de noter les films. Utilisation de l\'api the movie DB.\\n ! Pensez \xe0 mettre votre cl\xe9 d\'api dans le fichiers routes/index.js. ! Pensez \xe0 mettre un lien de connexion mongodb dans models/bdd.js\\n D\xe9marrer le backend en premier, puis le frontend situ\xe9 dans reactapp/ dans un autre terminal.\\n Pensez \xe0 faire npm install et npm start dans le frontend et le backend.","stack":["React","theMDB API","Express mongoDB"],"codeLink":"https://github.com/kris1803/mymoviz"},{"name":"morningNews","lang":"fr","img":"/img/projects/morningnews.webp","description":"MERN stack web application, for your news digests for each day. You can add articles to wishlist, and open them later. Authorization with signin/signup. Passwords are in plain text, because it\'s only for testing. Bcrypt is easy to implement.\\n The React frontend is in reactapp/ . (not production build).\\n Before starting:\\n   - Put your newsapi api key in reactapp/src/ScreenSource.js , reactapp/src/ScreenArticlesBySource.js\\n   - Put your mongodb connection link in models/bdd.js\\n   - Do npm \'install\' and \'npm start\'","stack":["React","Redux","REST api","Express","MongoDB"],"codeLink":"https://github.com/kris1803/morningnews"},{"name":"weatherApp","lang":"en","img":"/img/projects/weatherapp.webp","description":"WeatherApp in MEN stack.\\n Authorization : Signup, Signin. Saved in mongoDb.\\n Application to see minimal and maximum temperature by city, and weather description.\\n Adding/Removing cities to favorites. Markers on map where are selected cities. Cities are saved to mongoDb, so they are persistent. Refresh button to refresh data for cities. Weather route is protected. Using Bootstrap 5.\\n To start: - put your OpenWeatherMap api key in routes/index.js - put your connection link to mongodb in ./models/connection.js file. - npm install - npm start","stack":["Bootstrap 5","OpenWeatherMap API"],"codeLink":"https://github.com/kris1803/weatherapp"}]')}},function(e){e.O(0,[120,858,774,888,179],(function(){return t=1244,e(e.s=t);var t}));var t=e.O();_N_E=t}]);